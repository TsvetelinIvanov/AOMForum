@using AOMForum.Web.Models.Posts
@using AOMForum.Web.Infrastructure
@using static AOMForum.Common.ViewConstants.Posts.Details
@using static AOMForum.Common.GlobalConstants
@model PostDetailsViewModel

@{
    ViewData["Title"] = ViewTitle + Model.Title;
    void DisplayComments(int? parentId)
    {
        IEnumerable<CommentInPostViewModel> comments = this.Model.Comments/*.Where(c => c.ParentId == parentId)*/;
        if (!comments.Any())
        {
            return;
        }

        @foreach (CommentInPostViewModel comment in comments)
        {
            <div class="container-fluid mt-100">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card mb-4">
                            <div class="card-header">
                                <div class="media flex-wrap w-100 align-items-center">
                                    <img src="@comment.AuthorProfilePictureURL" class="d-block ui-w-40 rounded-circle" alt="@(AltImage + comment.AuthorUserName)">
                                    <div class="media-body ml-3">
                                        @comment.AuthorUserName
                                        <div class="text-muted small">
                                            @*<time datetime="@comment.CreatedOn"></time>*@
                                            <p>@comment.CreatedOn</p>
                                        </div>
                                    </div>
                                    <div class="text-muted small ml-3">
                                        @*@if (this.User.Identity != null && this.User.Identity.IsAuthenticated)
                                        {
                                            <div class="px-4 pt-3"> <button type="button" class="btn btn-secondary" onclick="showAddCommentForm(@comment.Id)"><i class="fa fa-plus"></i>&nbsp; @CreateComment</button> </div>
                                        }*@
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <article>
                                    @Html.Raw(comment.SanitizedContent)
                                </article>
                                @*@{
                                    DisplayComments(comment.Id);
                                }*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
}

<h1>@Model.Title</h1>
<div class="container-fluid mt-100">
    <div class="row">
        <div class="col-md-12">
            <div class="card mb-4">
                <div class="card-header">
                    <div class="media flex-wrap w-100 align-items-center">
                        <img src="@Model.ImageUrl" class="d-block ui-w-40 rounded-circle" alt="@(AltImage + Model.Title)">
                        <div class="media-body ml-3">
                            @Model.AuthorUserName
                            <div class="text-muted small">
                                <p>@Model.CreatedOn</p>
                            </div>
                        </div>
                        <div class="text-muted small ml-3">
                            <form id="votesForm" method="post"></form>
                            <div>
                                <a href="#" onclick="sendVote(@Model.Id, true)">
                                    <i class="fa fa-thumbs-up"></i>
                                </a>
                            </div>
                            <div id="votesCount">@Model.VotesCount</div>
                            <div>
                                <a href="#" onclick="sendVote(@Model.Id, false)">
                                    <i class="fa fa-thumbs-down"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <article>
                        @Html.Raw(Model.SanitizedContent)
                    </article>
                    <div>
                        <dl class="row">                            
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.CommentsCount)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.CommentsCount)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Category)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Category.Name)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.AuthorUserName)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.AuthorUserName)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.AuthorProfilePictureURL)
                            </dt>
                            <dd class="col-sm-10">
                                <img src="@Model.AuthorProfilePictureURL" alt="@(AltImage + Model.AuthorUserName)" width="100" />
                            </dd>
                        </dl>
                    </div>
                    <div>
                        <a asp-area="" asp-controller="Posts" asp-action="Create">@CreateNewPost</a> |                        
                        <a asp-area="" asp-controller="PostReports" asp-action="Create" asp-route-id="@Model.Id">@CreateReport</a> |
                        <a asp-area="" asp-controller="Categories" asp-action="Details" asp-route-id="@Model.Category.Id">@GoToCategory</a> |
                        <a asp-area="" asp-controller="Posts" asp-action="Index">@BackToIndex</a>
                        @if (this.Model.AuthorId == this.User.Id() || this.User.IsInRole(AdministratorRoleName))
                        {
                            @:|
                            <a asp-area="" asp-controller="Posts" asp-action="Edit" asp-route-id="@Model.Id">@EditAction</a> @:|
                            <a asp-area="" asp-controller="Posts" asp-action="Delete" asp-route-id="@Model.Id">@DeleteAction</a>
                        }
                    </div>

                    <h3 class="text-center">@TagsHeading</h3>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    @TagNameTitle
                                </th>
                                <th>
                                    @ActionsTitle
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (TagInPostViewModel tag in Model.Tags)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => tag.Name)
                                    </td>
                                    <td>
                                        <a asp-area="" asp-controller="Tags" asp-action="Details" asp-route-id="@tag.Id">@DetailsAction</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    @if (this.User.Identity != null && this.User.Identity.IsAuthenticated)
                    {
                        <div class="px-4 pt-3"> <button type="button" class="btn btn-primary float-right" onclick="showAddCommentForm(0)"><i class="fa fa-plus"></i>&nbsp; @CreateComment</button> </div>
                        <div class="clearfix"></div>
                    }
                    @{
                        DisplayComments(null);
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script src="/lib/tinymce/tinymce.min.js" type="text/javascript"></script>
<script type="text/javascript">
    tinymce.init({
        selector: "textarea",
        plugins: ["image paste table link code media"]
    });
</script>
<div>
    <form asp-area="" asp-controller="Comments" asp-action="Create" method="post" id="AddCommentForm" style="display: none">
        <input type="hidden" name="PostId" value="@this.Model.Id" />
        @*//<input type="hidden" name="ParentId" value="0" />*@
        <div>
            <label for="Content">@CreateComment</label>
            <textarea name="Content" id="Content" class="form-control"></textarea>
        </div>
        <div>
            <input type="submit" class="btn btn-primary" value="@SendComment" />
        </div>
    </form>
</div>

@section Scripts {
    <script>
        function showAddCommentForm(parentId) {
            //$("#AddCommentForm input[name='ParentId']").val(parentId);
            $("#AddCommentForm").show();
            $([document.documentElement, document.body]).animate({
                scrollTop: $("#AddCommentForm").offset().top
            }, 1000);
        }

        function sendVote(postId, isUpVote) {
            var token = $("#votesForm input[name=__RequestVerificationToken]").val();
            var json = { postId: postId, isUpVote: isUpVote };
            $.ajax({
                url: "/api/postvotes",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    $("#votesCount").html(data.votesCount);
                }
            });
        }
    </script>
}



<h1 class="text-center">@this.ViewData["Title"]</h1>
<hr />

@*<vc:create-comment post-id="@Model.Id" parent-id="null"></vc:create-comment>*@

<div>    
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedOn)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedOn)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SanitizedContent)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SanitizedContent)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CommentsCount)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CommentsCount)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.VotesCount)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.VotesCount)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Category.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AuthorUserName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AuthorUserName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AuthorProfilePictureURL)
        </dt>
        <dd class = "col-sm-10">
            <img src="@Model.AuthorProfilePictureURL" alt="@(AltImage + Model.AuthorUserName)" width="100" />
        </dd>
    </dl>
</div>
<div>
    <a asp-area="" asp-controller="Posts" asp-action="Create">@CreateNewPost</a> |
    <a asp-area="" asp-controller="Comments" asp-action="Create">@CreateComment</a> |
    <a asp-area="" asp-controller="PostReports" asp-action="Create">@CreateReport</a> |
    <a asp-area="" asp-controller="Categories" asp-action="Details" asp-route-id="@Model?.Category.Id">@GoToCategory</a> | 
    <a asp-area="" asp-controller="Posts" asp-action="Index">@BackToIndex</a>
    @if (this.Model.AuthorId == this.User.Id() || this.User.IsInRole(AdministratorRoleName))
    {
        @:|
        <a asp-area="" asp-controller="Posts" asp-action="Edit" asp-route-id="@Model.Id">@EditAction</a> @:| 
        <a asp-area="" asp-controller="Posts" asp-action="Delete" asp-route-id="@Model.Id">@DeleteAction</a>
    }
</div>

<h3 class="text-center">@TagsHeading</h3>
<table class="table">
    <thead>
        <tr>
            <th>
                @TagNameTitle
            </th>            
            <th>
                @ActionsTitle
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (TagInPostViewModel tag in Model.Tags)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => tag.Name)
                </td>                
                <td>
                    <a asp-area="" asp-controller="Tags" asp-action="Details" asp-route-id="@tag.Id">@DetailsAction</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<h3 class="text-center">@CommentsHeading</h3>
<table class="table">
    <thead>
        <tr>
            <th>
                @CommentContentTitle
            </th>
            @*<th>
                @CommentVotesCountTitle
            </th>*@
            <th>
                @CommentCreatedOnTitle
            </th>
            <th>
                @CommentAuthorTitle
            </th>
            <th>
                @CommentAuthorImageTitle
            </th>
            <th>
                @ActionsTitle
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (CommentInPostViewModel comment in Model.Comments)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => comment.SanitizedContent)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => comment.VotesCount)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => comment.CreatedOn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => comment.AuthorUserName)
                </td>
                <td>
                    <img src="@comment.AuthorProfilePictureURL" alt="@(AltImage + comment.AuthorUserName)" width="100" />
                </td>
                <td>
                    <a asp-area="" asp-controller="Comments" asp-action="Details" asp-route-id="@comment.Id">@DetailsAction</a> |
                    <a asp-area="" asp-controller="Comments" asp-action="Create">@CreateComment</a> |
                    <a asp-area="" asp-controller="CommentReports" asp-action="Create">@CreateReport</a>
                    @if (this.Model.AuthorId == this.User.Id() || this.User.IsInRole(AdministratorRoleName))
                    {
                        @:|
                        <a asp-area="" asp-controller="Comments" asp-action="Edit" asp-route-id="@Model.Id">@EditAction</a> @:|
                        <a asp-area="" asp-controller="Comments" asp-action="Delete" asp-route-id="@Model.Id">@DeleteAction</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>